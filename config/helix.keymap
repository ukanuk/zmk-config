/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/rgb.h>
 #include <dt-bindings/zmk/ext_power.h>
 #include <dt-bindings/zmk/outputs.h>

 #define DEFAULT 0
 #define LOWER  1
 #define RAISE  2
 #define ADJUST 3

/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
      macros {
        zed_em_kay: zed_em_kay {
              compatible = "zmk,behavior-macro";
              #binding-cells = <0>;
              bindings
                  = <&macro_press &kp LSHFT>
                  , <&macro_tap &kp Z &kp M &kp K>
                  , <&macro_release &kp LSHFT>
                  ;
              };
        ip: ip_local {
              compatible = "zmk,behavior-macro";
              #binding-cells = <0>;
              bindings
                  = <&macro_tap &kp N1 &kp N9 &kp N2 &kp PERIOD &kp N1 &kp N6 &kp N8 &kp PERIOD &kp N1 &kp PERIOD >
                  ;
              };
        heart: emoji_heart {
              compatible = "zmk,behavior-macro";
              #binding-cells = <0>;
              bindings
                  = <&macro_press   &kp LALT>
                  , <&macro_tap     &kp KP_N3 >
                  , <&macro_release &kp LALT>
                  ;
              }; 
        jpy: japanese_yen {
              compatible = "zmk,behavior-macro";
              #binding-cells = <0>;
              bindings
                  = <&macro_tap   &kp INT_YEN>
                  ;
              }; 
       };
       keymap {
              compatible = "zmk,keymap";

              default_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // | GRAVE  |   1    |   2    |   3    |   4    |   5    |                                      |   6    |   7    |   8    |   9    |   0    |  DEL   |
 // |  TAB   |   Q    |   W    |   E    |   R    |   T    |                                      |   Y    |   U    |   I    |   O    |   P    |  BSPC  |
 // |  CTRL  |   A    |   S    |   D    |   F    |   G    |                                      |   H    |   J    |   K    |   L    |   ;    |   '    |
 // |  SHIFT |   Z    |   X    |   C    |   V    |   B    |  LBKT  |                    |  RBKT  |   N    |   M    |   ,    |   .    |   /    |  RET   |
 // | ADJUST |  ESC   |  ALT   |  LGUI  | EISUU  | LOWER  | SPACE  |                    |  SPACE | RAISE  |  KANA  |  LEFT  |  DOWN  |  UP    |  RIGHT |
                     bindings = <
       &kp GRAVE  &kp N1  &kp N2   &kp N3   &kp N4    &kp N5                                 &kp K_CMENU   &heart          &kp F24     &jpy      &ip       &zed_em_kay
       &kp TAB    &kp Q   &kp W    &kp E    &kp R     &kp T                                  &kp C_AL_CALC &kp KP_MINUS    &kp KP_PLUS &kp EQUAL &kp BSPC  &kp KP_ENTER
       &kp LCTRL  &kp A   &kp S    &kp D    &kp F     &kp G                                  &kp C_VOL_UP  &kp KP_MULTIPLY &kp KP_N9   &kp KP_N6 &kp KP_N3 &kp KP_DOT
       &kp LSHFT  &kp Z   &kp X    &kp C    &kp V     &kp B     &kp LBKT         &kp C_NEXT  &kp C_VOL_DN  &kp KP_SLASH    &kp KP_N8   &kp KP_N5 &kp KP_N2 &kp KP_N0
       &mo ADJUST &kp ESC &kp LALT &kp LGUI &kp LANG2 &mo LOWER &kp SPACE        &kp C_PP    &kp C_MUTE    &kp KP_NUMLOCK  &kp KP_N7   &kp KP_N4 &kp KP_N1 &mo ADJUST
                     >;
              };
              lower_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |      |      |      |      |      |      |                                  |      |      |      |      |      |      |
 // |  ~   |  !   |  @   |  #   |  $   |  %   |                                  |  ^   |  &   |  *   |  (   |  )   |      |
 // |      |      |      |      |      |      |                                  |      |  _   |  +   |  {   |  }   | PIPE |
 // |      |      |      |      |      |      |  (   |                    |  )   |      |      |      | HOME | END  |      |
 // |      |      |      |      |      |      |      |                    |      |      |      |      |      |      |      |
                     bindings = <
       &trans    &trans   &trans &trans   &trans   &trans                             &trans    &trans    &trans    &trans   &trans   &trans
       &kp TILDE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT                          &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &trans
       &trans    &trans   &trans &trans   &trans   &trans                             &trans    &kp UNDER &kp PLUS  &kp LBRC &kp RBRC &kp PIPE
       &trans    &trans   &trans &trans   &trans   &trans    &kp LPAR        &kp RPAR &trans    &trans    &trans    &kp HOME &kp END  &trans
       &trans    &trans   &trans &trans   &trans   &trans    &trans          &trans   &trans    &trans    &trans    &trans   &trans   &trans
                     >;
              };
              raise_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |       |       |       |       |       |       |                                    |       |       |       |       |       |       |
 // |   `   |   1   |   2   |   3   |   4   |   5   |                                    |   6   |   7   |   8   |   9   |   0   |  DEL  |
 // |       |  F1   |  F2   |  F3   |  F4   |  F5   |                                    |  F6   |   -   |   =   |   [   |   ]   |   \   |
 // |       |  F7   |  F8   |  F9   |  F10  |  F11  |       |                    |       |  F12  |       | PSCRN | PG_DN | PG_UP |       |
 // |       |       |       |       |       |       |       |                    |       |       |       | NEXT  | VOL-  | VOL+  | PLAY  |
                     bindings = <
       &trans    &trans &trans &trans &trans  &trans                       &trans  &trans    &trans     &trans       &trans       &trans
       &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4  &kp N5                       &kp N6  &kp N7    &kp N8     &kp N9       &kp N0       &kp DEL
       &trans    &kp F1 &kp F2 &kp F3 &kp F4  &kp F5                       &kp F6  &kp MINUS &kp EQUAL  &kp LBKT     &kp RBKT     &kp BSLH
       &trans    &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &trans        &trans &kp F12 &trans    &kp PSCRN  &kp PG_DN    &kp PG_UP    &trans
       &trans    &trans &trans &trans &trans  &trans  &trans        &trans &trans  &trans    &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP &kp C_PP
                     >;
              };
              adjust_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |    `     |    !     |    @     |    #     |    $     |    %     |                                          |    ^     |    &     |    *     |    (     |    )     |  EP TOG  |
 // |  BT CLR  | BT SEL0  | BT SEL1  | BT SEL2  | BGT SEL3 | BT SEL4  |                                          | RGB EFF+ | RGB HUE+ | RGB SAT+ | RGB SPD+ | RGB BRI+ | RGB TOG  |
 // |  BT NXT  | OUT TOG  | OUT USB  | OUT BLE  |          |          |                                          | RGB EFF- | RGB HUE- | RGB SAT- | RGB SPD- | RGB BRI- |          |
 // |  BT PRV  |          |          |          |          |          |    {     |                    |    }     |          |          |          |          |          |          |
 // |          |          |          |          |          |          |          |                    |          |          |          |          |          |          |          |
                     bindings = <
       &kp GRAVE  &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT                             &kp CARET       &kp AMPS     &kp ASTRK       &kp LPAR        &kp RPAR     &ext_power EP_TOG
       &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                          &rgb_ug RGB_EFF &out OUT_USB &out OUT_BLE    &rgb_ug RGB_SPI &bt BT_CLR   &rgb_ug RGB_TOG
       &bt BT_NXT &out OUT_TOG &out OUT_USB &out OUT_BLE &trans       &trans                                &rgb_ug RGB_EFR &out OUT_TOG &rgb_ug RGB_SAD &rgb_ug RGB_SPD &bt BT_SEL 3 &trans
       &bt BT_PRV &trans       &trans       &trans       &trans       &trans       &kp LBRC        &kp RBRC &trans          &bt BT_NXT   &trans          &trans          &bt BT_SEL 2 &bt BT_SEL 0
       &trans     &trans       &trans       &trans       &trans       &trans       &trans          &trans   &trans          &bt BT_PRV   &trans          &bt BT_SEL 4    &bt BT_SEL 1 &trans
                     >;
              };
       };
};
